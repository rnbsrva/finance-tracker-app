spring.jpa.hibernate.ddl-auto=update
spring.security.oauth2.client.provider.keycloak.authorization-uri=${OAUTH2_SERVER:http://localhost:8080}/auth/realms/socialapp/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=${OAUTH2_SERVER:http://localhost:8080}/auth/realms/socialapp/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=${OAUTH2_SERVER:http://localhost:8080}/auth/realms/socialapp/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.user-info-uri=${OAUTH2_SERVER:http://localhost:8080}/auth/realms/socialapp/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.user-name-attribute=sub
spring.security.oauth2.client.registration.finance_app.provider=keycloak
spring.security.oauth2.client.registration.finance_app.client-name=finance_app
spring.security.oauth2.client.registration.finance_app.client-id=finance_app
spring.security.oauth2.client.registration.finance_app.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.finance_app.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.finance_app.scope=openid
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/finance_app
spring.datasource.username=${DB_USERNAME:postgres}
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.datasource.password=${DB_PASSWORD:0000}
server.port=2912
logging.level.org.springframework.web=debug
logging.level.org.springframework.security=debug
